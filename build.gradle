plugins {
	id 'java-library'
	id 'eclipse'
	id 'idea'
	id 'net.neoforged.gradle.userdev' version "$version_neogradle"
	id 'com.github.johnrengelman.shadow' version '8.1.1'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

//----------------------------------------------------------------------------------------------------------------------

version = mod_version
group = mod_group
base.archivesName = "Immersive Petroleum-" + version_minecraft

repositories {
	maven {	name = "BlameJared";	url = "https://maven.blamejared.com/" }			// IE & CT Files
	maven { name = "DVS1 Maven FS"; url = "https://dvs1.progwml6.com/files/maven" }	// JEI & Tinkers Files
	maven { name = "CurseMaven";	url = 'https://cfa2.cursemaven.com' }			// Needed for PNC
	maven { // CC-Tweaked
		url 'https://squiddev.cc/maven/'
		content {
			includeGroup("cc.tweaked")
			includeModule("org.squiddev", "Cobalt")
		}
	}
	
	flatDir { dirs 'flatdir' }
}

sourceSets {
	main {
		resources {
			srcDirs = [
				"$rootDir/src/main/resources",
				"$rootDir/src/generated/resources"
			]
		}
	}
	datagen {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
		compileClasspath += main.output
		runtimeClasspath += main.output
	}
}

def version_replaces = [
	'version_minecraft'	: version_minecraft,
	'version_neoforge'	: version_neoforge,
	'version_ip'		: project.version,
	'version_ie'		: version_ie,
	'version_jei'		: version_jei,
]

processResources {
	duplicatesStrategy = DuplicatesStrategy.FAIL
	inputs.properties(version_replaces)
	filesMatching("META-INF/mods.toml") {
		expand version_replaces
	}
	exclude ".cache"
}

minecraft.accessTransformers.file rootProject.file('src/main/resources/META-INF/accesstransformer.cfg')

runs {
	configureEach {
		workingDirectory project.file('run')
		systemProperty 'forge.logging.markers', 'REGISTRIES'
		systemProperty 'forge.logging.console.level', 'info'
		systemProperty 'fml.earlyprogresswindow', 'false'
		
		systemProperty 'mixin.env.remapRefMap', 'true'
		systemProperty 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

		modSource project.sourceSets.main
	}

	client

	server {
		programArgument '-nogui'
	}

	data {
		programArguments.addAll '--mod', 'immersivepetroleum',
			 '--all',
			 '--output', file('src/generated/resources/').getAbsolutePath(),
			 '--validate',
			 '--existing', sourceSets.main.resources.srcDirs[0].getAbsolutePath(),
			 '--existing-mod', 'immersiveengineering'
	}
}

dependencies {
	implementation "net.neoforged:neoforge:${version_neoforge}"
	
	implementation "blusunrize.immersiveengineering:ImmersiveEngineering:${version_ie}"
	//compileOnly "blusunrize.immersiveengineering:ImmersiveEngineering:${version_ie}:api"
	datagenImplementation "blusunrize.immersiveengineering:ImmersiveEngineering:${version_ie}:datagen"

	//implementation "vazkii.patchouli:Patchouli:1.18.2-67"
	//implementation "curse.maven:pneumaticcraft-repressurized-281849:3913972"

	//compileOnly "com.blamejared.crafttweaker:CraftTweaker-forge-1.19.2:${version_ct}"
	
	runtimeOnly "mezz.jei:jei-${version_minecraft}-neoforge:${version_jei}"
	compileOnly "mezz.jei:jei-${version_minecraft}-neoforge-api:${version_jei}"
	compileOnly "mezz.jei:jei-${version_minecraft}-common-api:${version_jei}"
	
	//runtimeOnly "cc.tweaked:cc-tweaked-${version_minecraft}-common:${version_cctweaked}"
	//compileOnly "cc.tweaked:cc-tweaked-${version_minecraft}-common-api:${version_cctweaked}"
}

def customGradle = rootProject.file('custom.gradle');
if(customGradle.exists()){
	apply from: customGradle;
}

jar {
	manifest {
		attributes([
			"Specification-Title": "immersivepetroleum",
			"Specification-Vendor": "flaxbeard",
			"Specification-Version": "1",
			"Implementation-Title": project.name,
			"Implementation-Version": "${version}",
			"Implementation-Vendor" :"flaxbeard",
			"Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
		])
	}
}
